
JOBS_DESC = \
"""
Solves a flexible jobshop problems with the CP-SAT solver.

A jobshop is a standard scheduling problem when you must sequence a
series of task_types on a set of machines. Each job contains one task_type per
machine. The order of execution and the length of each job on each
machine is task_type dependent.

The objective is to minimize the maximum completion time of all
jobs. This is called the makespan.
""".strip()

JOBS_STRUCTURE = \
"""
[  # task = (processing_time, machine_id)
    [  # Job 0
        [(3, 0), (1, 1), (5, 2)],  # task 0 with 3 alternatives
        [(2, 0), (4, 1), (6, 2)],  # task 1 with 3 alternatives
        [(2, 0), (3, 1), (1, 2)],  # task 2 with 3 alternatives
    ],
    [  # Job 1
        ...
    ]
]
""".strip()

JOBS_EXAMPLE = \
"""
[
    [
        [[3, 0], [1, 1], [5, 2]],
        [[2, 0], [4, 1], [6, 2]],
        [[2, 0], [3, 1], [1, 2]]
    ],
    [
        [[2, 0], [3, 1], [4, 2]],
        [[1, 0], [5, 1], [4, 2]],
        [[2, 0], [1, 1], [4, 2]]
    ],
    [
        [[2, 0], [1, 1], [4, 2]],
        [[2, 0], [3, 1], [4, 2]],
        [[3, 0], [1, 1], [5, 2]]
    ]
]
""".strip()

SCENARIOS_DESC = \
"""
Testing scenarios are like different stories we create to check different solutions
generated by the the solver. They help us see how the schedule changes in different
situations, like when we're focused on a different objective functions, By trying out
these scenarios, we can easily evaluate and compare schedules before those are released
to production.
""".strip()

SCENARIOS_STRUCTURE = \
"""
name: str                # Name of this scenario (e.g. baseline)
objective_function: str  # 'makespan' or 'oee'
""".strip()

SCENARIOS_EXAMPLE = \
"""
name,objective_function
minimize_makespan,makespan
minimize_oee,oee
""".strip()